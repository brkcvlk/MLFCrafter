name: Version Bump (PDM)

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  bump-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install PDM
        run: |
          pip install pdm

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get old version
        id: old
        run: |
          echo "OLD_VERSION=$(pdm show --version)" >> $GITHUB_ENV

      - name: Bump version (patch)
        run: |
          pdm bump patch

      - name: Get new version
        id: new
        run: |
          echo "NEW_VERSION=$(pdm show --version)" >> $GITHUB_ENV

      - name: Create new branch and push
        run: |
          git checkout -b bump-v$NEW_VERSION
          git add pyproject.toml
          git commit -m "bump: version $OLD_VERSION â†’ $NEW_VERSION"
          git push origin bump-v$NEW_VERSION

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "bump: version ${{ env.OLD_VERSION }} â†’ ${{ env.NEW_VERSION }}"
          branch: bump-v${{ env.NEW_VERSION }}
          title: "ðŸ”– Version Bump: v${{ env.NEW_VERSION }}"
          body: |
            This PR bumps the version from `${{ env.OLD_VERSION }}` to `${{ env.NEW_VERSION }}` using `pdm bump`.
          base: main
